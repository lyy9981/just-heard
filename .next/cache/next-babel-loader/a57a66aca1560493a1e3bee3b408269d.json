{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject;\n\nimport gql from 'graphql-tag';\nvar SEARCH_TOPICS = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  query searchTopics($slug: String!) {\\n    search_topics(slug: $slug, keyword: $keyword)\\n    \\t@rest(\\n    \\t\\ttype: \\\"Topic\\\",\\n    \\t\\tpath: \\\"topics/search/{args.slug}/{args.keyword}\\\"\\n    \\t) {\\n    \\tid\\n      phrase @type(name: \\\"Phrase\\\") {\\n\\t\\t\\t\\tid\\n\\t\\t\\t\\tname\\t\\n    \\t}\\n    }\\n  }\\n\"])));\nexport default SEARCH_TOPICS;","map":{"version":3,"names":["gql","SEARCH_TOPICS"],"sources":["/Users/yiyi/projects/just-heard/queries/searchTopics.js"],"sourcesContent":["import gql from 'graphql-tag'\n\nconst SEARCH_TOPICS = gql`\n  query searchTopics($slug: String!) {\n    search_topics(slug: $slug, keyword: $keyword)\n    \t@rest(\n    \t\ttype: \"Topic\",\n    \t\tpath: \"topics/search/{args.slug}/{args.keyword}\"\n    \t) {\n    \tid\n      phrase @type(name: \"Phrase\") {\n\t\t\t\tid\n\t\t\t\tname\t\n    \t}\n    }\n  }\n`\nexport default SEARCH_TOPICS\n"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,IAAMC,aAAa,GAAGD,GAAH,oXAAnB;AAeA,eAAeC,aAAf"},"metadata":{},"sourceType":"module"}